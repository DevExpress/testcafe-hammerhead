name: Test Functional (TestCafe)

on:
  workflow_dispatch:
    inputs:
      sha:
        description: 'The test commit SHA or ref'
        required: true
        default: 'master'
      merged_sha:
        description: 'The merge commit SHA'
      deploy_run_id:
        description: 'The ID of a deployment workspace run with artifacts'
env:
  NO_CACHE: ${{ secrets.NO_CACHE }}

jobs:
  test:
    runs-on: ubuntu-latest
    environment: test-functional
    env:
      RETRY_FAILED_TESTS: true
    steps:
      - uses: DevExpress/testcafe-build-system/actions/set-status@main
        with:
          status: 'pending'
      - uses: actions/checkout@v3
        with:
          ref: ${{github.event.inputs.merged_sha || github.event.inputs.sha}}

      - uses: actions/setup-node@v3
        with:
          node-version: 14

      - uses: actions/github-script@v6
        with:
          script: |
            const delay = ms => new Promise(resolve => setTimeout(resolve, ms));

            let artifacts = {};

            for(let i = 0;i<36&&!artifacts.total_count;i++,await delay(5000)) {
              try {
                ({ data: artifacts } = await github.rest.actions.listWorkflowRunArtifacts({
                repo: context.repo.repo,
                owner: context.repo.owner,
                run_id: context.payload.inputs.deploy_run_id
              }));
              }
              catch (e) {
                console.log(e);
              }
            }

            const { data: artifact } = await github.request(artifacts.artifacts.find(artifact=> artifact.name === 'npm').archive_download_url);
            require('fs').writeFileSync(require('path').join(process.env.GITHUB_WORKSPACE, 'package.zip'), Buffer.from(artifact))

      - run: |
          unzip package.zip
          tar --strip-components=1 -xzf testcafe-hammerhead-*.tgz

      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - uses: actions/cache@v3
        if: ${{ !env.NO_CACHE }}
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci
      - run: npx gulp test-functional-testcafe --no-build
        timeout-minutes: 60
      - uses: DevExpress/testcafe-build-system/actions/set-status@main
        with:
          status: 'success'
      - uses: DevExpress/testcafe-build-system/actions/set-status@main
        if: failure() || cancelled()
        with:
          status: 'failure'
